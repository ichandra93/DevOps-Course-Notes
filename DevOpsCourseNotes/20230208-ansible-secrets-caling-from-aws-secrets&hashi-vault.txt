How to call secrets from secret manager:
----------------------------------------
mysql  
user  --> root
password  --> we can keep in aws secret manager (plain text)

---
- hosts: localhost
  tasks:
  - name: install docker, python and pip
    yum:
      name: "{{ item }}"
      state: present
    with_items:
    - docker
    - python-pip
  - name: Start serice docker
    service:
      name: docker
      state: started
  - name: install docker module and boto3
    pip:
      name: "{{ item }}"
    with_items:
    - docker-py
    - boto3
	
---
- hosts: localhost
  tasks:
  - name: Install mysql packages
    docker_container:
      name: mysql-container
      image: mysql:5.7
      state: started
      recreate: yes
      ports:
        - 3306:3306
      volumes:
        - /var/lib/mysql
      env:
        "MYSQL_ROOT_PASSWORD": "{{ lookup('aws_secret', 'dev/app/mysql') }}"
		
		
role/user
user  --> aws configure

access_key
secret_key
region


##########################################################
#!/bin/bash
# Purpose: Vault Quick Setup
# OS Ubuntu/Amazon_Linux
# Run the script as Root user

curl -fsSL https://get.docker.com -o get-docker.sh
sh get-docker.sh      2>&1 > /dev/null
rm -rf get-docker.sh
yum install -y docker 2>&1 > /dev/null
systemctl start docker
systemctl enable docker

# Docker Compose Installation

curl -L "https://github.com/docker/compose/releases/download/1.25.5/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
docker-compose --version


mkdir -p "${PWD}"/vault/{config,file,logs}

touch    "${PWD}"/vault/docker-compose.yml

cat << EOF > "${PWD}"/vault/config/vault.json
{
  "backend": {
    "file": {
      "path": "/vault/file"
    }
  },
  "listener": {
    "tcp":{
      "address": "0.0.0.0:8200",
      "tls_disable": 1
    }
  },
  "ui": true
}
EOF

cat << EOF > "${PWD}"/vault/docker-compose.yml
version: '3.7'
services:
  vault:
    image: vault:latest
    container_name: vault
    ports:
      - "8200:8200"
    restart: unless-stopped
    volumes:
      -  ./logs:/vault/logs
      -  ./file:/vault/file
      -  ./config:/vault/config
    cap_add:
      - IPC_LOCK
    entrypoint: vault server -config=/vault/config/vault.json
EOF

cd "${PWD}"/vault

docker-compose up -d


hvs.OoIfV43vvOQYSqf46G4GpCfp

QTbnyyxdLrumulAXU+enzxYunpVsuldnKPqzO7wLG+fq
FnOglmb6/KcRFkoAenvX92IATqZcsJ0P1EUYKVYCjfc2
vaHiiL2tpY3N4NfdMyvooQGIGlFSmbKsndHkUB2WD1/0
waVl6Z+x1RYbA9ySd510jT6PKoJTyvp9piKsKGM1GgkD
Xkwb5eXHuccxEfp8RlkS3+UDtLT+xPqDFu49XvQJxXTl

---
- hosts: localhost
  vars:
    password_vault: "{{ lookup('hashi_vault', 'secret=/kv/secret/data token=hvs.OoIfV43vvOQYSqf46G4GpCfp url=http://100.24.74.168:8200/ validate_certs=False') }}"
  tasks:
  - name: install hvac module
    pip:
      name: hvac
  - name: Install mysql packages
    docker_container:
      name: mysql-container
      image: mysql:5.7
      state: started
      recreate: yes
      ports:
        - 3306:3306
      volumes:
        - /var/lib/mysql
      env:
        "MYSQL_ROOT_PASSWORD": "{{ password_vault.password }}"


"{{ lookup('hashi_vault', 'secret=/kv/secret/data token=hvs.OoIfV43vvOQYSqf46G4GpCfp url=http://100.24.74.168:8200')}}"