Volume in kuberentes:
---------------------
persistent volume  --> node
ebs 
EFS
NFS 

mysql database:
---------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  label:
    app: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - image: mysql:5.6
        name: mysqldb
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: Naresh#240
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim
		  
		 
docker run --name mysqldb \
	-v mysql-volume:/var/lib/mysql \
	-p 3306:3306 \
	-e MYSQL_ROOT_PASSWORD=Naresh#240 \
	-d mysql:5.6
	

kubectl exec -it mysql-5f69d4f9f5-6jfjt /bin/bash	

mysql -u root -p

use mysql;
create table employee(eno varchar(40), ename varchar(40));
insert into employee(eno,ename) values("101","Naresh");
select * from employee;


kubectl delete -f deployment.yaml

pv and pvc:
-----------
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv
  labels:
    type: local
spec:
  storageClassName: standard
  capacity:
    storage: 250Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"
  persistentVolumeReclaimPolicy: Retain
  
  
In the CLI, the access modes are abbreviated to:

RWO - ReadWriteOnce
ROX - ReadOnlyMany
RWX - ReadWriteMany
RWOP - ReadWriteOncePod


---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  labels:
    type: local
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 250Mi